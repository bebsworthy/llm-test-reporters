# LLM TEST REPORTER - DETAILED MODE

## TEST FAILURE #1
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_assertion_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:10
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #2
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_type_mismatch
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:16
TYPE: TypeError


CODE CONTEXT:
   17 |     def test_type_mismatch(self):
   18 |         """Type error in operation."""
   19 |         # Trying to add incompatible types
>  20 | >       result = "string" + 123
   21 |                  ^^^^^^^^^^^^^^
   22 | E       TypeError: can only concatenate str (not "int") to str

FAILURE REASON: TypeError: can only concatenate str (not "int") to str
FIX HINT: Verify data types match expected values

---
## TEST FAILURE #3
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_zero_division
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:22
TYPE: ZeroDivisionError


CODE CONTEXT:
   24 |     def test_zero_division(self):
   25 |         """Division by zero error."""
   26 |         numerator = 10
>  27 |         denominator = 0
   28 | >       result = numerator / denominator
   29 |                  ^^^^^^^^^^^^^^^^^^^^^^^
   30 | E       ZeroDivisionError: division by zero

FAILURE REASON: ZeroDivisionError: division by zero
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #4
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_index_out_of_bounds
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:29
TYPE: IndexError


CODE CONTEXT:
   31 |     def test_index_out_of_bounds(self):
   32 |         """Index error accessing list."""
   33 |         items = [1, 2, 3]
>  34 |         # Accessing index that doesn't exist
   35 | >       value = items[10]
   36 |                 ^^^^^^^^^
   37 | E       IndexError: list index out of range

FAILURE REASON: IndexError: list index out of range
FIX HINT: Check array bounds before accessing elements

---
## TEST FAILURE #5
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_key_not_found
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:36
TYPE: KeyError


CODE CONTEXT:
   38 |     def test_key_not_found(self):
   39 |         """Key error accessing dictionary."""
   40 |         data = {"name": "Alice", "age": 25}
>  41 |         # Accessing non-existent key
   42 | >       city = data["city"]
   43 |                ^^^^^^^^^^^^
   44 | E       KeyError: 'city'

FAILURE REASON: KeyError: 'city'
FIX HINT: Verify dictionary key exists before access

---
## TEST FAILURE #6
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_attribute_missing
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:43
TYPE: AttributeError


CODE CONTEXT:
   47 |     def test_attribute_missing(self):
   48 |         """Attribute error on object."""
   49 |         class Person:
   50 |             def __init__(self, name):
   51 |                 self.name = name
>  52 |     
   53 |         person = Person("Bob")
   54 |         # Accessing non-existent attribute
   55 | >       age = person.age
   56 |               ^^^^^^^^^^
   57 | E       AttributeError: 'Person' object has no attribute 'age'

FAILURE REASON: AttributeError: 'Person' object has no attribute 'age'
FIX HINT: Verify object has the attribute or method

---
## TEST FAILURE #7
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_import_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:54
TYPE: ModuleNotFoundError


CODE CONTEXT:
   55 |     def test_import_failure(self):
   56 |         """Import error for non-existent module."""
>  57 | >       import non_existent_module
   58 | E       ModuleNotFoundError: No module named 'non_existent_module'

FAILURE REASON: ModuleNotFoundError: No module named 'non_existent_module'
FIX HINT: Ensure module is installed and import path is correct

---
## TEST FAILURE #8
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_value_conversion_error
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:59
TYPE: ValueError


CODE CONTEXT:
   60 |     def test_value_conversion_error(self):
   61 |         """ValueError in conversion."""
   62 |         text = "not a number"
>  63 | >       number = int(text)
   64 |                  ^^^^^^^^^
   65 | E       ValueError: invalid literal for int() with base 10: 'not a number'

FAILURE REASON: ValueError: invalid literal for int() with base 10: 'not a number'
FIX HINT: Check input format and conversion logic

---
## TEST FAILURE #9
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAllFailures > test_name_undefined
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:71
TYPE: NameError


CODE CONTEXT:
   72 |     def test_name_undefined(self):
   73 |         """NameError for undefined variable."""
   74 |         # Using undefined variable
>  75 | >       result = undefined_variable * 2
   76 |                  ^^^^^^^^^^^^^^^^^^
   77 | E       NameError: name 'undefined_variable' is not defined

FAILURE REASON: NameError: name 'undefined_variable' is not defined
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #10
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestComplexFailures > test_nested_assertion_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:81
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #11
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestComplexFailures > test_list_comparison_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:105
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #12
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestComplexFailures > test_custom_exception
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:111
TYPE: test_all_failing.TestComplexFailures.test_custom_exception.<locals>.CustomError


CODE CONTEXT:
  117 |     def risky_operation():
> 118 | >       raise CustomError("Operation failed due to custom reason")
  119 | E       test_all_failing.TestComplexFailures.test_custom_exception.<locals>.CustomError: Operation failed due to custom reason

FAILURE REASON: test_all_failing.TestComplexFailures.test_custom_exception.<locals>.CustomError: Operation failed due to custom reason
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #13
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestComplexFailures > test_multiple_assertions_fail
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:122
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #14
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_parametrized_all_fail[1-2]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:130
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #15
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_parametrized_all_fail[2-3]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:130
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #16
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_parametrized_all_fail[3-5]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:130
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #17
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_parametrized_all_fail[4-7]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:130
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #18
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAsyncFailures > test_async_assertion_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:144
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #19
SUITE: test_all_failing
TEST: tests/test_all_failing.py > TestAsyncFailures > test_async_exception
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:153
TYPE: RuntimeError


CODE CONTEXT:
  157 |     async def failing_operation():
> 158 | >       raise RuntimeError("Async operation failed")
  159 | E       RuntimeError: Async operation failed

FAILURE REASON: RuntimeError: Async operation failed
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #20
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_fixture_usage_failure
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:163
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #21
SUITE: test_all_failing
TEST: tests/test_all_failing.py > test_permission_denied
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_all_failing.py:179
TYPE: FileNotFoundError


CODE CONTEXT:
  180 |     def test_permission_denied():
  181 |         """Test file operation with permission error."""
  182 |         # Try to write to a protected location
> 183 | >       with open("/root/test.txt", "w") as f:
  184 |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  185 | E       FileNotFoundError: [Errno 2] No such file or directory: '/root/test.txt'

FAILURE REASON: FileNotFoundError: [Errno 2] No such file or directory: '/root/test.txt'
FIX HINT: Verify file path and ensure file exists

---
## TEST FAILURE #1
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestMixedResults > test_failing_equality
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:16
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #2
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestMixedResults > test_failing_type_error
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:27
TYPE: TypeError


CODE CONTEXT:
   28 |     def test_failing_type_error(self):
   29 |         """This test should fail with type error."""
   30 |         # This will raise TypeError
>  31 | >       result = "string" + 5
   32 |                  ^^^^^^^^^^^^
   33 | E       TypeError: can only concatenate str (not "int") to str

FAILURE REASON: TypeError: can only concatenate str (not "int") to str
FIX HINT: Verify data types match expected values

---
## TEST FAILURE #3
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestMixedResults > test_failing_key_error
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:45
TYPE: KeyError


CODE CONTEXT:
   47 |     def test_failing_key_error(self):
   48 |         """This test should fail with key error."""
   49 |         data = {"name": "John", "age": 30}
>  50 |         # This will raise KeyError
   51 | >       value = data["city"]
   52 |                 ^^^^^^^^^^^^
   53 | E       KeyError: 'city'

FAILURE REASON: KeyError: 'city'
FIX HINT: Verify dictionary key exists before access

---
## TEST FAILURE #4
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestAsyncOperations > test_async_timeout
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:77
TYPE: Error


CODE CONTEXT:
  106 |     async def __aexit__(
  107 |         self,
  108 |         exc_type: Optional[Type[BaseException]],
  109 |         exc_val: Optional[BaseException],
  110 |         exc_tb: Optional[TracebackType],
  111 |     ) -> Optional[bool]:
  112 |         assert self._state in (_State.ENTERED, _State.EXPIRING)
  113 |     
  114 |         if self._timeout_handler is not None:
  115 |             self._timeout_handler.cancel()
> 116 |             self._timeout_handler = None
  117 |     
  118 |         if self._state is _State.EXPIRING:
  119 |             self._state = _State.EXPIRED
  120 |     
  121 |             if self._task.uncancel() <= self._cancelling and exc_type is not None:
  122 |                 # Since there are no new cancel requests, we're
  123 |                 # handling this.
  124 |                 if issubclass(exc_type, exceptions.CancelledError):
  125 | >                   raise TimeoutError from exc_val
  126 | E                   TimeoutError

FAILURE REASON: TimeoutError
FIX HINT: Increase timeout duration or optimize async operations

---
## TEST FAILURE #5
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestParametrizedMixed > test_square_numbers[4-15]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:92
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #6
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestParametrizedMixed > test_square_numbers[6-35]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:92
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #7
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestParametrizedMixed > test_string_length[python-7]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:103
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #8
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > TestParametrizedMixed > test_string_length[test-5]
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:103
TYPE: Error


CODE CONTEXT:
  1136 |     def get_terminal_writer(self) -> TerminalWriter:
  1137 |         terminalreporter: TerminalReporter | None = self.pluginmanager.get_plugin(
  1138 |             "terminalreporter"
> 1139 |         )
  1140 | >       assert terminalreporter is not None
  1141 |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1142 | E       AssertionError

FAILURE REASON: AssertionError
FIX HINT: Review error message and stack trace for details

---
## TEST FAILURE #9
SUITE: test_mixed_results
TEST: tests/test_mixed_results.py > test_value_error_handling
FILE: /Users/boyd/wip/reporters/python/pytest-reporter/tests/test_mixed_results.py:130
TYPE: ValueError


CODE CONTEXT:
  132 |     def parse_number(text: str) -> int:
  133 | >       return int(text)
> 134 |                ^^^^^^^^^
  135 | E       ValueError: invalid literal for int() with base 10: 'not a number'

FAILURE REASON: ValueError: invalid literal for int() with base 10: 'not a number'
FIX HINT: Check input format and conversion logic

---
---
## SUMMARY
- TOTAL TESTS: 62 (31 passed, 30 failed, 1 skipped)
- FAILURE RATE: 48.39%
- DURATION: 10.62s
- EXIT CODE: 1
