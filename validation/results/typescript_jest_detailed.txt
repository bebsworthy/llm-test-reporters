> jest --config=jest.example.config.js


# LLM TEST REPORTER - DETAILED MODE

## TEST FAILURE #1
SUITE: async
TEST: Async Operations > should timeout on slow operation
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/async.test.ts:13
TYPE: Assertion Error

CODE CONTEXT:
  11 |   });
  12 | 
> 13 |   it('should timeout on slow operation', async () => {
     |     ^
  14 |     // This will timeout - intentionally taking longer than test timeout
  15 |     const result = await slowOperation();

FAILURE REASON: thrown: "Exceeded timeout of 500 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."
FIX HINT: Verify the assertion matches the actual behavior

## TEST FAILURE #2
SUITE: async
TEST: Async Operations > should handle promise rejection
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/async.test.ts:20
TYPE: Timeout

CODE CONTEXT:
  18 | 
  19 |   it('should handle promise rejection', async () => {
> 20 |     await expect(failingOperation()).rejects.toThrow('Network error');
     |                                              ^
  21 |     // Will fail - wrong error message
  22 |   });

FAILURE REASON: Test execution exceeded configured timeout
FIX HINT: Increase test timeout or optimize async operations

## TEST FAILURE #3
SUITE: calculator
TEST: Calculator > addition > should add two positive numbers
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/calculator.test.ts:11
TYPE: Assertion Error

EXPECTED: ) // Object.is equality
RECEIVED: ).toBe(expected) // Object.is equality

CODE CONTEXT:
   9 |     it('should add two positive numbers', () => {
  10 |       const result = add(2, 3);
> 11 |       expect(result).toBe(5);
     |                      ^
  12 |     });
  13 | 

FAILURE REASON: Expected value ) // Object.is equality but received ).toBe(expected) // Object.is equality
FIX HINT: Check the expected value or fix the implementation to return correct result

## TEST FAILURE #4
SUITE: calculator
TEST: Calculator > addition > should handle negative numbers
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/calculator.test.ts:16
TYPE: Assertion Error

EXPECTED: ) // Object.is equality
RECEIVED: ).toBe(expected) // Object.is equality

CODE CONTEXT:
  14 |     it('should handle negative numbers', () => {
  15 |       const result = add(-1, 1);
> 16 |       expect(result).toBe(0); // This will fail - expecting 0 but will get -2
     |                      ^
  17 |     });
  18 | 

FAILURE REASON: Expected value ) // Object.is equality but received ).toBe(expected) // Object.is equality
FIX HINT: Check the expected value or fix the implementation to return correct result

## TEST FAILURE #5
SUITE: calculator
TEST: Calculator > division > should throw on divide by zero
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/calculator.test.ts:32
TYPE: Assertion Error

EXPECTED: )
RECEIVED: ).toThrow(expected)

CODE CONTEXT:
  30 | 
  31 |     it('should throw on divide by zero', () => {
> 32 |       expect(() => divide(10, 0)).toThrow('Division by zero');
     |                                   ^
  33 |       // This will fail - function doesn't throw
  34 |     });

FAILURE REASON: Expected value ) but received ).toThrow(expected)
FIX HINT: Ensure the function throws the expected error

## TEST FAILURE #6
SUITE: string-utils
TEST: String Utils > capitalize > should capitalize first letter
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/string-utils.test.ts:11
TYPE: Assertion Error

EXPECTED: ) // Object.is equality
RECEIVED: ).toBe(expected) // Object.is equality

CODE CONTEXT:
   9 |     it('should capitalize first letter', () => {
  10 |       const result = capitalize('hello');
> 11 |       expect(result).toBe('Hello'); // Will fail - function not implemented correctly
     |                      ^
  12 |     });
  13 | 

FAILURE REASON: Expected value ) // Object.is equality but received ).toBe(expected) // Object.is equality
FIX HINT: Check the expected value or fix the implementation to return correct result

## TEST FAILURE #7
SUITE: string-utils
TEST: String Utils > capitalize > should handle already capitalized
FILE: /Users/boyd/wip/reporters/typescript/jest-reporter/tests/string-utils.test.ts:21
TYPE: Assertion Error

EXPECTED: ) // Object.is equality
RECEIVED: ).toBe(expected) // Object.is equality

CODE CONTEXT:
  19 |     it('should handle already capitalized', () => {
  20 |       const result = capitalize('HELLO');
> 21 |       expect(result).toBe('HELLO');
     |                      ^
  22 |     });
  23 |   });

FAILURE REASON: Expected value ) // Object.is equality but received ).toBe(expected) // Object.is equality
FIX HINT: Check the expected value or fix the implementation to return correct result

---
## ERROR PATTERNS DETECTED
- 7 tests failed due to Multiple failures in tests module
- 6 tests failed due to Multiple assertion failures
- 6 tests failed due to Multiple expectation mismatches

---
## SUMMARY
- TOTAL TESTS: 13 (6 passed, 7 failed)
- FAILURE RATE: 53.85%
- DURATION: 1.64s
- EXIT CODE: 1